name: C++ CI

on:
  push:
    branches: [master]
    tags: '*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    env:
      BUILD_TYPE: release
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        cxx: [g++-11, clang++]
        include:
          - os: macos-10.15
            cxx: g++-11
          - os: windows-2019
            cxx: cl
          - os: windows-2019
            cxx: g++
            cmake_generator: "\"MinGW Makefiles\""

    steps:
      - uses: actions/checkout@v2

      - name: Prepare env
        shell: bash
        run: |
          echo $GITHUB_WORKSPACE
          mkdir -p $GITHUB_WORKSPACE/build
          mkdir $GITHUB_WORKSPACE/artifacts
      - name: Install toolchain (Linux)
        if: runner.os == 'Linux' && matrix.cxx == 'g++-11'
        shell: bash
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get install gcc-11 g++-11

      - name: Cache MinGW and deps (Windows g++)
        uses: actions/cache@v2
        id: cache-mingw
        if: runner.os == 'Windows' && matrix.cxx == 'g++'
        with:
          path: |
            gcc
          key: ${{ runner.os }}-gcc

      - name: Cache deps
        uses: actions/cache@v2
        id: cache-deps
        with:
          path: |
            external
            build/external
            .git/modules
          key: ${{ matrix.os }}-${{ runner.os }}-${{ matrix.cxx }}-${{ hashFiles('.gitmodules') }}

      - name: Download toolchain (Windows g++)
        uses: suisei-cn/actions-download-file@v1
        id: downloadgcc
        if: runner.os == 'Windows' && matrix.cxx == 'g++' && steps.cache-mingw.outputs.cache-hit != 'true'
        with:
          url: "https://github.com/brechtsanders/winlibs_mingw/releases/download/11.2.0-13.0.0-9.0.0-ucrt-r2/winlibs-x86_64-posix-seh-gcc-11.2.0-mingw-w64ucrt-9.0.0-r2.zip"
          target: compiler
      - name: Install toolchain (Windows g++)
        if: runner.os == 'Windows' && matrix.cxx == 'g++' && steps.cache-mingw.outputs.cache-hit != 'true'
        shell: bash
        run: |
          7z x compiler/winlibs-x86_64-posix-seh-gcc-11.2.0-mingw-w64ucrt-9.0.0-r2.zip -ogcc
      - name: Configure CMake (Windows g++)
        if: runner.os == 'Windows' && matrix.cxx == 'g++'
        env:
          CXX: ${{ matrix.cxx }}
        shell: bash
        working-directory: ${{ github.workspace }}/build
        run: |
          PATH="$(pwd)/../gcc/mingw64/bin:$PATH"
          CMAKE_GENERATOR=${{ matrix.cmake_generator }} cmake -S $GITHUB_WORKSPACE -B . -DCMAKE_BUILD_TYPE=$BUILD_TYPE

      - name: Configure CMake
        if: ${{ !(runner.os == 'Windows' && matrix.cxx == 'g++') }}
        env:
          CXX: ${{ matrix.cxx }}
        shell: bash
        working-directory: ${{ github.workspace }}/build
        run: |
          CMAKE_GENERATOR=${{ matrix.cmake_generator }} cmake -S $GITHUB_WORKSPACE -B . -DCMAKE_BUILD_TYPE=$BUILD_TYPE

      - name: Build
        shell: bash
        run: |
          cat .git/config
          cmake --build build --config $BUILD_TYPE -j6

      - name: Install
        shell: bash
        run: cmake --install build --config $BUILD_TYPE --prefix artifacts

      - name: Set Tag Name
        shell: bash
        run: echo "TAG_NAME=${GITHUB_REF#'refs/tags/'}" >> $GITHUB_ENV

      - name: Archive Release
        uses: thedoctor0/zip-release@master
        if: startsWith(github.ref, 'refs/tags/')
        with:
          type: 'zip'
          path: artifacts
          filename: release_${{ env.TAG_NAME }}_${{ matrix.os }}_${{ matrix.cxx }}.zip
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            release_${{ env.TAG_NAME }}_${{ matrix.os }}_${{ matrix.cxx }}.zip